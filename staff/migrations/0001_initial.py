# Generated by Django 4.2.13 on 2024-08-20 09:50

from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('animals', '0006_remove_animal_schedule_animal_location'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('staff_email', models.EmailField(max_length=255, unique=True)),
                ('staff_name', models.CharField(max_length=50)),
                ('staff_fullname', models.CharField(max_length=50)),
                ('staff_role', models.CharField(max_length=50)),
                ('staff_picture', models.ImageField(default='default.jpg', null=True, upload_to='')),
                ('staff_status', models.BooleanField()),
                ('is_staff', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Staff',
                'verbose_name_plural': 'Staffs',
                'db_table': 'staff',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='StaffTimetable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('staff_task', models.CharField(max_length=250)),
                ('task_start_time', models.DateTimeField()),
                ('task_end_time', models.DateTimeField()),
                ('task_status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=50)),
                ('task_type', models.CharField(choices=[('feeding', 'Feeding'), ('cleaning', 'Cleaning'), ('medication', 'Medication'), ('veterinary', 'Veterinary'), ('show', 'Show'), ('other', 'Other')], max_length=50)),
                ('animals_id', models.ManyToManyField(blank=True, related_name='timetables', to='animals.animal')),
                ('staff_id', models.ManyToManyField(related_name='timetables', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Staff Timetable',
                'verbose_name_plural': 'Staff Timetables',
                'db_table': 'staff_timetable',
                'managed': True,
            },
        ),
    ]
